################################################################################
#          FILE: common/tasks/main.yml
#         USAGE: 
#   DESCRIPTION: This playbook runs all the common plays in the hosts
#       OPTIONS: --- 
#          BUGS: --- 
#         NOTES: --- 
#        AUTHOR: niuzhiqiang, niuzhiqiang90@foxmail.com
#  ORGANIZATION: 
#       CREATED: Tue 06 Nov 2018 09:57:56 AM CST
#      REVISION: 1.0.0
################################################################################
---
- name: update system pkgs cache
  apt:
    update_cache: yes
  sudo: yes
  tags: common.update

- name: dist-upgrade system pkgs
  apt:
    upgrade: dist
    update_cache: yes
  sudo: yes
  tags: common.dist-upgrade

- name: install pkgs
  apt: pkg={{ item }} state=latest
  with_items:
    - nmon
    - tree
    - htop
    - git
    - libkrb5-dev
  sudo: yes
  tags: common.install-pkgs

- name: set fs.file-max
  lineinfile:
    dest: /etc/sysctl.conf
    regexp: '^fs.file-max'
    line: 'fs.file-max = 2000000'
  sudo: yes
  tags: common.set.fs.file-max

- name: set System TCP parameters tuning
  lineinfile:
    dest: /etc/sysctl.conf
    regexp: "{{ item.name }}"
    line: "{{ item.value }}"
  with_items:
    - { name: '^fs.file-max', value: 'fs.file-max = 3000000' }
    - { name: '^fs.nr_open', value: 'fs.nr_open = 2000000' }
    - { name: '^net.core.netdev_max_backlog', value: 'net.core.netdev_max_backlog = 30000' }
    - { name: '^net.core.somaxconn', value: 'net.core.somaxconn = 30000' }
    - { name: '^net.ipv4.tcp_max_syn_backlog', value: 'net.ipv4.tcp_max_syn_backlog = 30000' }
    - { name: '^net.core.rps_sock_flow_entries', value: 'net.core.rps_sock_flow_entries = 32768' }
    - { name: '^net.ipv4.tcp_max_tw_buckets', value: 'net.ipv4.tcp_max_tw_buckets = 10000' }
    - { name: '^net.ipv4.tcp_fin_timeout', value: 'net.ipv4.tcp_fin_timeout = 10' }
    - { name: '^net.ipv4.tcp_timestamps', value: 'net.ipv4.tcp_timestamps = 0' }
    - { name: '^net.ipv4.tcp_tw_reuse', value: 'net.ipv4.tcp_tw_reuse = 1' }
    - { name: '^net.ipv4.tcp_tw_recycle', value: 'net.ipv4.tcp_tw_recycle = 0' }
    - { name: '^net.ipv4.tcp_syncookies', value: 'net.ipv4.tcp_syncookies = 1' }
    - { name: '^net.ipv4.tcp_synack_retries', value: 'net.ipv4.tcp_synack_retries = 10' }
    - { name: '^net.ipv4.tcp_window_scaling', value: 'net.ipv4.tcp_window_scaling = 1' }
    - { name: '^net.ipv4.tcp_keepalive_time', value: 'net.ipv4.tcp_keepalive_time = 180' }
    - { name: '^net.ipv4.tcp_keepalive_intvl', value: 'net.ipv4.tcp_keepalive_intvl = 30' }
    - { name: '^net.ipv4.tcp_keepalive_probes', value: 'net.ipv4.tcp_keepalive_probes = 5' }
    - { name: '^net.ipv4.ip_local_port_range', value: 'net.ipv4.ip_local_port_range = 1024 65535' }
  sudo: yes
  tags: common.set.sysctl

- name: refresh the sysctl
  command: sysctl -p
  sudo: yes
  tags: common.refresh.sysctl

- name: set limits
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: "{{ item.name }}"
    line: "{{ item.value }}"
  with_items:
    - { name: '^\* hard nofile', value: '* hard nofile 2000000' }
    - { name: '^\* soft nofile', value: '* soft nofile 2000000' }
  sudo: yes
  tags: common.set.limits

- name: change the default sh to bash
  file: src=/bin/bash dest=/bin/sh state=link
  sudo: yes
  tags: common.change.bash

- name: create /mnt/data
  file:
    path: /mnt/data
    state: directory
  sudo: yes
  tags: common.create.data.dir

- name: create data directory
  file:
    path: /mnt/data/dbs
    owner: "{{ user }}"
    group: "{{ user }}"
    state: directory
  sudo: yes
  tags: common.create.data.dir

  #- name: mount the vdb1
  #  mount:
  #    path: /mnt/data
  #    state: absent
  #  sudo: yes
  #
- name: check device status
  stat:
    path: /dev/vdb1
  register: mount_device
  tags: common.mount.device

- name: mount the data disk
  mount:
    path: /mnt/data
    src: /dev/vdb1
    fstype: ext4
    state: mounted
  sudo: yes
  when: mount_device.stat.exists == true
  tags: common.mount.device

- name: Create swap file
  command: dd if=/dev/zero of={{ swap_file_path }} bs=1M count={{ swap_file_size_mb }}
  args:
    creates: "{{ swap_file_path }}"
  sudo: yes
  tags: common.create.swapfile

- name: check swap file type
  command: file {{ swap_file_path }}
  register: swapfile
  tags: common.create.swapfile

- name: make swap file
  command: mkswap {{ swap_file_path }}
  args:
    creates: "{{ swap_file_path }}"
  when: swapfile.stdout.find('swap file') == -1
  sudo: yes
  tags: common.create.swapfile
  
- name: Write swap entry in the fstab
  mount:
    src: "{{ swap_file_path }}"
    path: swap
    fstype: swap
    opts: defaults
    passno: 0
    dump: 0
    state: present
  sudo: yes
  tags: common.create.swapfile

- name: Mount swap
  command: swapon "{{ swap_file_path }}"
  sudo: yes
  when: ansible_swaptotal_mb < 1
  tags: common.create.swapfile

- name: Change swap file permissions
  file:
    path: "{{ swap_file_path }}"
    owner: root
    group: root
    mode: 0600
  sudo: yes
  tags: common.create.swapfile

- name: update pip
  pip:
    name: pip
    extra_args: --upgrade 
  sudo: yes
  tags: common.update.pip

